{"version":3,"sources":["components/TriggerBtn.js","components/Timer.js","components/PersonsForm.js","components/PersonsItem.js","components/PersonsList.js","components/Persons.js","components/TotalPrice.js","components/ResetBtn.js","components/HourPrice.js","App.js","serviceWorker.js","index.js"],"names":["TriggerBtn","_ref","timerStarted","startTimer","stopTimer","react_default","a","createElement","className","onClick","StartBtn","this","formatTime","props","secondsPassed","totalSeconds","sec_num","parseInt","hours","Math","floor","minutes","seconds","formatDigit","digit","React","Component","PersonsForm","onSubmit","handleSubmit","bind","autoFocus","type","name","required","placeholder","e","preventDefault","data","FormData","target","reset","addPerson","get","PersonsItem","state","_this","salary","value","onChange","handleNameChange","handleSalaryChange","removePerson","setState","newSalary","salaryChange","personIdx","PersonsList","personsPresent","map","person","idx","PersonsItem_PersonsItem","key","concat","Persons","PersonsForm_PersonsForm","PersonsList_PersonsList","TotalPrice","totalPrice","currency","ResetBtn","onReset","HourPrice","hourPrice","round","SEC_IN_MONTH","HOUR_IN_MONTH","App","meetingPrice","timerInterval","clearInterval","setInterval","parseFloat","countSecPrice","toFixed","resetTimer","getMonthlyPrice","total","countHourPrice","Object","toConsumableArray","splice","components_TriggerBtn","Timer_StartBtn","TotalPrice_TotalPrice","components_HourPrice","Persons_Persons","ResetBtn_ResetBtn","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","App_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.827506cf.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TriggerBtn = ({timerStarted, startTimer, stopTimer}) =>\r\n    <button className='btn btn-light btn-lg mb-5'\r\n            onClick={timerStarted ? stopTimer : startTimer}>{timerStarted ? 'Pause' : 'Start'}</button>\r\n\r\n\r\nTriggerBtn.propTypes = {\r\n    timerStarted: PropTypes.bool.isRequired,\r\n    startTimer: PropTypes.func.isRequired,\r\n    stopTimer: PropTypes.func.isRequired\r\n}\r\n\r\nexport default TriggerBtn","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class StartBtn extends React.Component {\r\n\r\n    render() {\r\n        return <h4>{this.formatTime(this.props.secondsPassed)}</h4>\r\n    }\r\n\r\n    formatTime(totalSeconds) {\r\n        var sec_num = parseInt(totalSeconds, 10);\r\n        var hours = Math.floor(sec_num / 3600);\r\n        var minutes = Math.floor((sec_num - (hours * 3600)) / 60);\r\n        var seconds = sec_num - (hours * 3600) - (minutes * 60);\r\n\r\n        return this.formatDigit(hours) + \":\" + this.formatDigit(minutes) + \":\" + this.formatDigit(seconds);\r\n    }\r\n\r\n    formatDigit(digit) {\r\n        return (digit < 10) ? \"0\" + digit : digit\r\n    }\r\n}\r\n\r\nStartBtn.propTypes = {\r\n    secondsPassed: PropTypes.number.isRequired\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class PersonsForm extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit.bind(this)}>\r\n                <input className='form-control col-5 d-inline' autoFocus type='text' name='name' required placeholder='Name' ></input>\r\n                <input className='form-control col-5 d-inline' type='number' name='salary' required placeholder='Monthly salary'></input>\r\n\r\n                <button className='btn' type='submit'><i className=\"fas fa-plus-circle\"></i></button>\r\n            </form>\r\n        )\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        const data = new FormData(e.target);\r\n\r\n        e.target.reset();\r\n\r\n        this.props.addPerson(data.get(\"name\"), data.get(\"salary\"));\r\n    }\r\n}\r\n\r\nPersonsForm.propTypes = {\r\n    addPerson: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class PersonsItem extends React.Component {\r\n\r\n    state = {\r\n        name: this.props.name,\r\n        salary: this.props.salary\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input className='form-control col-5 d-inline' type='text' placeholder='Name' value={this.state.name} onChange={this.handleNameChange.bind(this)}></input>\r\n                <input className='form-control col-5 d-inline' type='number' placeholder='Salary' value={this.state.salary} onChange={this.handleSalaryChange.bind(this)}></input>\r\n\r\n                <button className='btn' onClick={this.removePerson.bind(this)}>\r\n                    <i className=\"fas fa-times-circle\"></i>\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleNameChange(e) {\r\n        this.setState({\r\n                name: e.target.value\r\n            }\r\n        );\r\n    }\r\n\r\n    handleSalaryChange(e) {\r\n        let newSalary = e.target.value ? parseInt(e.target.value): 0;\r\n\r\n        this.setState({\r\n                salary: newSalary\r\n            }\r\n        );\r\n        this.props.salaryChange(newSalary, this.props.personIdx)\r\n    }\r\n\r\n    removePerson() {\r\n        this.props.removePerson(this.props.personIdx)\r\n    }\r\n}\r\n\r\nPersonsItem.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    salary: PropTypes.number.isRequired,\r\n    removePerson: PropTypes.func.isRequired,\r\n    salaryChange: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport PersonsItem from \"./PersonsItem\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class PersonsList extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className='persons-list'>\r\n                {this.props.personsPresent.map((person, idx) => (\r\n                        <PersonsItem\r\n                            key={`${person['name']}${idx}`}\r\n                            salary={person[\"salary\"]}\r\n                            name={person[\"name\"]}\r\n                            removePerson={this.props.removePerson}\r\n                            salaryChange={this.props.salaryChange}\r\n                            personIdx={idx}/>\r\n                    )\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nPersonsList.propTypes = {\r\n    personsPresent: PropTypes.array.isRequired,\r\n    removePerson: PropTypes.func.isRequired,\r\n    salaryChange: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport PersonsForm from \"./PersonsForm\"\r\nimport PersonsList from \"./PersonsList\"\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Persons extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h5 className='mb-4'>Add all present people</h5>\r\n\r\n                <PersonsForm addPerson={this.props.addPerson}/>\r\n                <PersonsList personsPresent={this.props.personsPresent}\r\n                             removePerson={this.props.removePerson}\r\n                             salaryChange={this.props.salaryChange}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nPersons.propTypes = {\r\n    addPerson: PropTypes.func.isRequired,\r\n    removePerson: PropTypes.func.isRequired,\r\n    salaryChange: PropTypes.func.isRequired,\r\n    personsPresent: PropTypes.array.isRequired\r\n}\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class TotalPrice extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <h1>\r\n                <strong>{this.props.totalPrice} {this.props.currency}</strong>\r\n            </h1>\r\n        )\r\n    }\r\n}\r\n\r\nTotalPrice.propTypes = {\r\n    totalPrice: PropTypes.number.isRequired,\r\n    currency: PropTypes.string.isRequired,\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class ResetBtn extends React.Component {\r\n    render() {\r\n        return <button className='btn btn-light float-right mt-4' onClick={this.props.onReset}>Reset time</button>\r\n    }\r\n}\r\n\r\nResetBtn.propTypes = {\r\n    onReset: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst HourPrice = ({currency, hourPrice}) => (\r\n    <h3>\r\n        <strong>{Math.round(hourPrice * 100) / 100} {currency} / 1h</strong>\r\n    </h3>\r\n);\r\n\r\nHourPrice.propTypes = {\r\n    currency: PropTypes.string.isRequired,\r\n    hourPrice: PropTypes.number.isRequired\r\n};\r\n\r\nexport default HourPrice","import React, {Component} from 'react';\nimport './App.css';\nimport TriggerBtn from \"./components/TriggerBtn\"\nimport Timer from \"./components/Timer\"\nimport Persons from \"./components/Persons\";\nimport TotalPrice from \"./components/TotalPrice\";\nimport ResetBtn from \"./components/ResetBtn\";\nimport HourPrice from \"./components/HourPrice\";\n\n\n// Assuming full time and 8h/day work\nconst SEC_IN_MONTH = 60 * 60 * 8 * 20;\nconst HOUR_IN_MONTH = 8 * 20;\n\nexport default class App extends Component {\n\n    state = {\n        timerStarted: false,\n        meetingPrice: 0,\n        secondsPassed: 0,\n        currency: \"PLN\",\n        personsPresent: [\n            {\n                \"name\": \"Jon\",\n                \"salary\": 20000\n            },\n            {\n                \"name\": \"Johan\",\n                \"salary\": 20000\n            }\n        ]\n    };\n    timerInterval = null;\n\n    startTimer = () => {\n        clearInterval(this.timerInterval);\n        this.setState({\n            timerStarted: true\n        });\n        this.timerInterval = setInterval(() => {\n            let secondsPassed = this.state.secondsPassed + 1;\n            this.setState({\n                secondsPassed: secondsPassed,\n                meetingPrice: (parseFloat(this.state.meetingPrice) + this.countSecPrice()).toFixed(2)\n            })\n        }, 1000);\n    }\n\n    stopTimer = () => {\n        this.setState({\n            timerStarted: false\n        });\n        clearInterval(this.timerInterval);\n    }\n\n    resetTimer = () => {\n        this.setState({\n            timerStarted: false,\n            secondsPassed: 0,\n            meetingPrice: 0\n        });\n        clearInterval(this.timerInterval);\n    }\n\n    getMonthlyPrice = () => {\n        let total = 0;\n        for (let person in this.state.personsPresent) {\n            total += parseFloat(this.state.personsPresent[person][\"salary\"])\n        }\n        return total;\n    }\n\n    countSecPrice = () => {\n        return this.getMonthlyPrice() / SEC_IN_MONTH\n    }\n\n    countHourPrice = () => {\n        return this.getMonthlyPrice() / HOUR_IN_MONTH\n    }\n\n    addPerson = (name, salary) => {\n        this.setState(\n            {\n                personsPresent: [{name: name, salary: salary}, ...this.state.personsPresent]\n            }\n        )\n    }\n\n    salaryChange = (newSalary, personIdx) => {\n        let personsPresent = [...this.state.personsPresent];\n\n        personsPresent[personIdx] = {\n            name: personsPresent[personIdx].name,\n            salary: newSalary\n        }\n\n        this.setState({\n            personsPresent: personsPresent\n        })\n    }\n\n    removePerson = (personIdx) => {\n        let personsPresent = [...this.state.personsPresent];\n\n        personsPresent.splice(personIdx, 1)\n\n        this.setState({\n            personsPresent: personsPresent\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"container-fluid\">\n                <div className=\"row app\">\n                    <h1 className='col-12 text-center mt-5 pt-xl-5 mb-3'>How much does your meeting cost?</h1>\n                    <div className=\"app-header col-12 col-xl-7\">\n                        <div>\n                            <TriggerBtn timerStarted={this.state.timerStarted}\n                                        stopTimer={this.stopTimer}\n                                        startTimer={this.startTimer}/>\n                            <Timer secondsPassed={this.state.secondsPassed}/>\n                            <TotalPrice totalPrice={this.state.meetingPrice} currency={this.state.currency}/>\n                            <HourPrice hourPrice={this.countHourPrice()} currency={this.state.currency}/>\n                        </div>\n                    </div>\n\n                    <div className=\"side-form col-12 col-xl-5\">\n                        <Persons\n                            personsPresent={this.state.personsPresent}\n                            addPerson={this.addPerson}\n                            removePerson={this.removePerson}\n                            salaryChange={this.salaryChange}\n                        />\n                    </div>\n                </div>\n                <ResetBtn onReset={this.resetTimer}/>\n            </div>\n\n        );\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}